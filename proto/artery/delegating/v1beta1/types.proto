syntax = "proto3";
package artery.delegating.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/arterynetwork/artr/x/delegating/types";

message RevokeRequest {
  google.protobuf.Timestamp time = 1 [
    (gogoproto.stdtime)  = true,
    (gogoproto.nullable) = false
  ];
  string amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}

message Record {
  google.protobuf.Timestamp next_accrue = 1 [
    (gogoproto.stdtime)  = true,
    (gogoproto.nullable) = true
  ];
  repeated RevokeRequest requests = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"requests,omitempty\""
  ];

  // MissedPart is a missed fraction of the current delegation period. Equal part of the next accrue will be deducted.
  // Normally, should be always zero.
  string missed_part = 16 [
    (gogoproto.nullable)   = true,
    (gogoproto.customtype) = "github.com/arterynetwork/artr/util.Fraction",
    (gogoproto.jsontag)    = "missed_part,omitempty",
    (gogoproto.moretags)   = "yaml:\"missed_part,omitempty\""
  ];
}

// Percentage value associated with a range of uARTR. Used as a sequence of repeated elements:
// the end boundary of the range is the start boundary of the net range, or infinity if the range is last one in the sequence.
message PercentageRange {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.equal)            = true;

  // Start boundary of a range in uARTR. Must be non-negative.
  uint64 start = 1;

  // Percent valid in a range. Must be non-negative.
  string percent = 2 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/arterynetwork/artr/util.Fraction"
  ];
}
