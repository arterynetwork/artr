syntax = "proto3";
package artery.earning.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "artery/earning/v1beta1/params.proto";
import "artery/earning/v1beta1/types.proto";

option go_package = "github.com/arterynetwork/artr/x/earning/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the module params
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/artery/earning/v1beta1/params";
  }
  // Get queries a earner info by address
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http).get = "/artery/earning/v1beta1/get/{address}";
  }
  // GetMultiple queries a earners info by addresses list
  rpc GetMultiple(GetMultipleRequest) returns (GetMultipleResponse) {
    option (google.api.http).get = "/artery/earning/v1beta1/get-multiple";
  }
  // List queries a loaded earner list
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http).get = "/artery/earning/v1beta1/list";
  }
}

message ParamsRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;
}

message ParamsResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  Params params = 1 [(gogoproto.nullable) = false];
}

message GetRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  string address = 1;
}

message GetResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  Earner earner = 1 [(gogoproto.nullable) = false];
}

message GetMultipleRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  repeated string addresses = 1;
}

message GetMultipleResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  repeated Earner earners = 1 [(gogoproto.nullable) = false];
}

message ListRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  int32 limit = 2 [(gogoproto.moretags) = "yaml:\"limit,omitempty\""];
  int32 page  = 3 [(gogoproto.moretags) = "yaml:\"page,omitempty\""];
}

message ListResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  repeated Earner list = 1 [(gogoproto.nullable) = false];
}
