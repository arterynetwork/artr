syntax = "proto3";
package artery.earning.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/arterynetwork/artr/x/earning/types";

message Earner {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  reserved 1,2;
  reserved "vpn","storage";

  string account = 3 [
    (gogoproto.jsontag)  = "account",
    (gogoproto.moretags) = "yaml:\"account\""
  ];

  google.protobuf.Timestamp vpn_last_seen = 4 [
    (gogoproto.stdtime)  = true,
    (gogoproto.customname) = "Vpn"
  ];
  google.protobuf.Timestamp storage_last_seen = 5 [
    (gogoproto.stdtime)  = true,
    (gogoproto.customname) = "Storage"
  ];
}

message Timestamps {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  google.protobuf.Timestamp vpn = 1 [(gogoproto.stdtime)  = true];
  google.protobuf.Timestamp storage = 2 [(gogoproto.stdtime)  = true];
}
