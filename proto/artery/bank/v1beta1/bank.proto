syntax = "proto3";
package artery.bank.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/arterynetwork/artr/x/bank/types";

// Params defines the parameters for the bank module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  int64 min_send = 1 [
    (gogoproto.jsontag)  = "min_send,omitempty",
    (gogoproto.moretags) = "yaml:\"min_send,omitempty\""
  ];

  // DustDelegation - delegations below OR EQUAL TO this value will be ignored as miniscule.
  int64 dust_delegation = 2;
}

// Supply represents a struct that passively keeps track of the total supply
// amounts in the network.
message Supply {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  repeated cosmos.base.v1beta1.Coin total = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "total",
    (gogoproto.moretags) = "yaml:\"total\""
  ];
}
