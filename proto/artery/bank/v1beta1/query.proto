syntax = "proto3";
package artery.bank.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "artery/bank/v1beta1/bank.proto";

option go_package = "github.com/arterynetwork/artr/x/bank/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of x/bank module.
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/artery/bank/v1beta1/params";
  };
  // Supply queries a bank supply total.
  rpc Supply(SupplyRequest) returns (SupplyResponse) {
    option (google.api.http).get = "/artery/bank/v1beta1/supply";
  }
  // Balance queries an account's balance/
  rpc Balance(BalanceRequest) returns (BalanceResponse) {
    option (google.api.http).get = "/artery/bank/v1beta1/balance/{acc_address}";
  }
}

// ParamsRequest defines the request type for querying x/bank parameters.
message ParamsRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;
}

// ParamsResponse defines the response type for querying x/bank parameters.
message ParamsResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  Params params = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "params",
    (gogoproto.moretags) = "yaml:\"params\""
  ];
}

message SupplyRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;
}

message SupplyResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  Supply supply = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "supply",
    (gogoproto.moretags) = "yaml:\"supply\""
  ];
}

message BalanceRequest {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  string acc_address = 1;
}

message BalanceResponse {
  option (gogoproto.equal)                = false;
  option (gogoproto.goproto_getters)      = false;
  option (gogoproto.goproto_unrecognized) = false;
  option (gogoproto.goproto_unkeyed)      = false;
  option (gogoproto.goproto_sizecache)    = false;

  repeated cosmos.base.v1beta1.Coin balance = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "balance",
    (gogoproto.moretags) = "yaml:\"balance\""
  ];
}
